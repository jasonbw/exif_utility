# A partial breakdown of an expamle photo stored in Intel (little endian) style

ffd8
ffe1
38f9 = how many bytes of exif data

Exif Header
4578 6966 0000

Tiff Header
4949 = does byte alignment [1]
2a00 = tag mark, these 2bytes are always 2bytes-length value of 0x002A. If the data uses Intel align, next 2bytes are "0x2a00". If it uses Motorola, they are "0x002a"
0800 0000 = offset to first IFD (Image File Directory). Note that this is Intel so it's little endian: 0000 0080

b000
e01020020000000920000000f01020005000000b20000001001020007000000b80000001201030001000000010000001a01050001000000c00000001b01050001000000c80000002801030001000000020000003201020014000000d0000000130203000100000002000000698704000100000000010000a5c407001c000000e4000000040900002020202020202020202020202020202020202020202020202020202020202000534f4e5900004453432d5737000048000000010000004800000001000000323030363a30333a32362031353a30393a3037005072696e74494d0030333030000002000200010000000101010000001e009a820500010000006e0200009d820500010000007602000022880300010000000200000027880300010000006400000000900700040000003032323003900200140000007e0200000490020014000000920200000191070004000000010203000291050001000000a602000004920a0001000000ae0200000592050001000000b60200000792030001000000050000000892030001000000000000000992030001000000180000000a92050001000000be0200007c92070020060000c602000000a00700040000003031303001a00300010000000100000002a0040001000000000c000003a00400010000000009000005a0040001000000e608000000a30700010000000300000001a30700010000000100000001a40300010000000000000002a40300010000000000000003a40300010000000000000006a40300010000000000000008a40300010000000000000009a4030001000000000000000aa403000100000000000000000000000a000000d0070000500000000a000000323030363a30333a32362031353a30393a303700323030363a30333a32362031353a30393a3037000800000001000000000000000a0000003000000010000000a70000000a000000534f4e592044534320000000090000200700010000000000000001900700940000004003000002900700c8000000d403000003900700c80000009c040000049007007c00000064050000059007007a000000e005000006900700fc0000005a06000007900700c80000005607000008900700c80000001e08000001fb88400001005f0054000000885f5700885f5700568d0000000070000000000000007000ecbe0fff08000000001afc5d0d00d8754805416914000000d8fffa00b5d7a530007000d7a530007000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100c300000800088a2e0000873920730505050505d705d78739b6058a8b0000000000000000b615cd2900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000690000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008e01e6007d00bec30000e7000000008800a000c70000a0a095100000000001dc73460010009e00ad00df0072017d016d018c01a2010001290100010001000100fb12fcd973577b58bdbdbdbdbdbd0000ec2a563528cdea2ab6ab20e2706d30c7003900ea004457fc8961e5e77d05edbbcc01a000130049005d7000000000000000000070000000000000000000700000000000000000007000bdbdbdbdbd4cdbc5e5efb1ef32c5156959654b000107efa9efa9efa9f061efa9efdbe038e038efb10100efb10000010000086988000000bdbdbdbdbdbdbdbdbdbdbdbd70b61b0001dcdcbc5f100101016801b2013f013f0134013401340134ec000000000000000000000000000000000000000000000000000000000000000095003900ac007a0095003900ac007a0000000168980001b2d900013ff600013f50000168980001b2d900013ff600013f50fffffe16ffffff80fffffeb0ffffffb800000000000000c4010100010000000000700000000000000000000000000000000000000000000800010001000100000000000100010001000000400040004000000030e0cfee4453288128a01dff051b0000b6b6000000eaffff00ff000000003f0000009600000062ff0000cd3fff0000000000000000000000000000000000000100000000004fcb0000745a000053e0000013460000c59f000069400000042c000045e50000cf3900004bde00006560000079ea000030c1000056840000eecc000065740000e3110000cbea0000c55900000c100000cdc9000045b20000e3c0000007ba0000a08800006a8900000ce60000b64a000045f800008ea3000087e300009292000030e4000088b3000005e6000045f20000629d00002bfb00004c3b0000bb310000880400008a83000045c40000746e000013ac0000f6d20000f0c2000005790000567ed3d36a0707076a6a6a07e2e0e2070707e2e3b1e3e20707e0b14ab1e00707e2e3b1e3e26a6a07e2e0e207d3d36a0707076a0000000100e77be7aee72ee7870eb75e44d816d872d88c00a3cdde055705d8cd01ea0504c8e7135e90d8fb000000000000000000000000000000000000000000000000000000005e4f5eb15ee3d8da7d8c40bf1b8f1bad1b9400a3046504e904410e435e3fd8db7de840864001000000000000000000000000000000000000000000000000000000008123bb0e814e30ae888d888d888d888d888d00a3cd290592051e8aea8a558afe70bd709bb6150000000000000000000000000000000000000000000000000000000001000000000ba8c000930da1003cf87d000b2f260000cae400be80c900ea6558008a55a100bebf4a00008a600088953300563304000466d600b6d7f90000232840b208d7409240350080009f001000d57dc20813406d7d337de61b131b3a7db5011f00c9006701a41bf508bc08521b8d7d8a089640327d04082001ac015b080401740063009001cf08ed0199019808940139009700c1011a01360090012001297de508e540c87d184083087f1bf64011008d00bd00c800f240c908ef40c5406700ab005f005700970200010002000400000052393800020007000400000030313030000000000a000301030001000000060000000f01020005000000820900001001020007000000880900001201030001000000010000001a01050001000000900900001b01050001000000980900002801030001000000020000003201020014000000a00900000102040001000000b409000002020400010000003d2f000000000000534f4e5900004453432d5737000048000000010000004800000001000000323030363a30333a32362031353a30393a303700

[1]
If it is 0x4949="I I", it means "Intel" type byte align. If it is 0x4d4d="MM", it means "Motorola" type byte align. For example, value '305,419,896' is noted as 0x12345678 by sixteenth system. At the Motrola align, it is stored as 0x12,0x34,0x56,0x78. If it's Intel align, it is stored as 0x78,0x56,0x34,0x12. It seems that most of digicams uses Intel align. Ricoh uses Motorola align. Sony uses Intel align except D700. Kodak DC200/210/240 use Motorola align, but DC220/260 use Intel align though they are using PowerPC! Therefore when we need the value of Exif data, we MUST check byte align every time. Though JPEG data uses Motorola align only, Exif allows both alignment. I can't understand why Exif didn't fix a byte align to Motorola.

Thumbnail image
ffd8
ffdb
0084

[...]

ffd9